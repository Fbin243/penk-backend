package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"
	"tenkhours/services/core/entity"
)

// Status is the resolver for the status field.
func (r *goalResolver) Status(ctx context.Context, obj *entity.Goal) (entity.GoalStatus, error) {
	return obj.EvaluateStatus(), nil
}

// Metric is the resolver for the metric field.
func (r *goalMetricResolver) Metric(ctx context.Context, obj *entity.GoalMetric) (*entity.Metric, error) {
	return r.MetricRepo.FindByID(ctx, obj.ID)
}

// Keep is the resolver for the _keep field.
func (r *goalOrderByResolver) Keep(ctx context.Context, obj *entity.GoalOrderBy, data *bool) error {
	panic(fmt.Errorf("not implemented: Keep - _keep"))
}

// Goal returns GoalResolver implementation.
func (r *Resolver) Goal() GoalResolver { return &goalResolver{r} }

// GoalMetric returns GoalMetricResolver implementation.
func (r *Resolver) GoalMetric() GoalMetricResolver { return &goalMetricResolver{r} }

// GoalOrderBy returns GoalOrderByResolver implementation.
func (r *Resolver) GoalOrderBy() GoalOrderByResolver { return &goalOrderByResolver{r} }

type goalResolver struct{ *Resolver }
type goalMetricResolver struct{ *Resolver }
type goalOrderByResolver struct{ *Resolver }
